$date
	Fri Feb 21 21:30:49 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module register_file_tb $end
$var wire 32 ! RD2 [31:0] $end
$var wire 32 " RD1 [31:0] $end
$var reg 5 # A1 [4:0] $end
$var reg 5 $ A2 [4:0] $end
$var reg 5 % A3 [4:0] $end
$var reg 1 & CLK $end
$var reg 1 ' CLR $end
$var reg 32 ( WD3 [31:0] $end
$var reg 1 ) WE3 $end
$scope module uut $end
$var wire 5 * A1 [4:0] $end
$var wire 5 + A2 [4:0] $end
$var wire 5 , A3 [4:0] $end
$var wire 1 & CLK $end
$var wire 1 ' CLR $end
$var wire 32 - RD1 [31:0] $end
$var wire 32 . RD2 [31:0] $end
$var wire 32 / WD3 [31:0] $end
$var wire 1 ) WE3 $end
$scope begin init_regs $end
$var integer 32 0 i [31:0] $end
$upscope $end
$scope begin reset_cycle $end
$var integer 32 1 i [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx 1
b100000 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
0)
b0 (
1'
0&
b0 %
b0 $
b0 #
b0 "
b0 !
$end
#5
b100000 1
1&
#10
0&
0'
#15
1&
#20
0&
b100 $
b100 +
b1010101111001101111011110000 (
b1010101111001101111011110000 /
b100 %
b100 ,
#25
1&
#30
0&
1)
#35
b1010101111001101111011110000 !
b1010101111001101111011110000 .
1&
#40
0&
b1010101111001101111011110000 "
b1010101111001101111011110000 -
b100 #
b100 *
#45
1&
#50
0&
b11011110101011011011111011101111 (
b11011110101011011011111011101111 /
b1 %
b1 ,
#55
1&
#60
0&
b11011110101011011011111011101111 "
b11011110101011011011111011101111 -
b1 #
b1 *
#65
1&
#70
0&
b11111111111111111111111111111111 (
b11111111111111111111111111111111 /
b0 %
b0 ,
#75
1&
#80
0&
b0 "
b0 -
b0 #
b0 *
#85
1&
#90
0&
b10010001101000101011001111000 (
b10010001101000101011001111000 /
b1010 %
b1010 ,
b11011110101011011011111011101111 "
b11011110101011011011111011101111 -
b1 #
b1 *
#95
1&
#100
0&
b10101010101010100101010101010101 (
b10101010101010100101010101010101 /
b10 %
b10 ,
#105
1&
#110
0&
b1010101010101011010101010101010 (
b1010101010101011010101010101010 /
#115
1&
#120
0&
b1010101010101011010101010101010 "
b1010101010101011010101010101010 -
b10 #
b10 *
#125
1&
#130
0&
b11001010111111101011101010111110 (
b11001010111111101011101010111110 /
b11 %
b11 ,
#135
1&
#140
0&
b11001010111111101011101010111110 !
b11001010111111101011101010111110 .
b11 $
b11 +
b11011110101011011011111011101111 "
b11011110101011011011111011101111 -
b1 #
b1 *
#145
1&
#150
0&
b10111110111011111011111011101111 (
b10111110111011111011111011101111 /
b101 %
b101 ,
0)
#155
1&
#160
0&
b0 "
b0 -
b101 #
b101 *
#165
1&
#170
0&
b10001001000100011001101000100 (
b10001001000100011001101000100 /
b110 %
b110 ,
1)
#175
1&
#180
0&
1'
#185
b0 !
b0 .
b100000 1
1&
#190
0&
b110 #
b110 *
