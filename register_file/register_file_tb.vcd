$date
	Tue Feb 18 11:21:08 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module register_file_tb $end
$var wire 32 ! readData1 [31:0] $end
$var reg 1 " clk $end
$var reg 32 # writeData [31:0] $end
$var reg 1 $ writeEn $end
$scope module uut $end
$var wire 1 " clk $end
$var wire 32 % readData1 [31:0] $end
$var wire 32 & writeData [31:0] $end
$var wire 1 $ writeEn $end
$scope begin genblk1[0] $end
$var parameter 2 ' i $end
$scope module u0 $end
$var wire 1 " clk $end
$var wire 32 ( d [31:0] $end
$var wire 1 $ en $end
$var reg 32 ) q [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$var parameter 2 * i $end
$scope module u0 $end
$var wire 1 " clk $end
$var wire 32 + d [31:0] $end
$var wire 1 $ en $end
$var reg 32 , q [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$var parameter 3 - i $end
$scope module u0 $end
$var wire 1 " clk $end
$var wire 32 . d [31:0] $end
$var wire 1 $ en $end
$var reg 32 / q [31:0] $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$var parameter 3 0 i $end
$scope module u0 $end
$var wire 1 " clk $end
$var wire 32 1 d [31:0] $end
$var wire 1 $ en $end
$var reg 32 2 q [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11 0
b10 -
b1 *
b0 '
$end
#0
$dumpvars
b0 2
b0 1
b0 /
b0 .
b0 ,
b0 +
b0 )
b0 (
b0 &
b0 %
1$
b0 #
0"
b0 !
$end
#5000
1"
#10000
0"
b11111111111111111111111111111111 #
b11111111111111111111111111111111 &
b11111111111111111111111111111111 (
b11111111111111111111111111111111 +
b11111111111111111111111111111111 .
b11111111111111111111111111111111 1
#15000
b11111111111111111111111111111111 2
b11111111111111111111111111111111 /
b11111111111111111111111111111111 ,
b11111111111111111111111111111111 !
b11111111111111111111111111111111 %
b11111111111111111111111111111111 )
1"
#20000
0"
b1111000011110000111100001111 #
b1111000011110000111100001111 &
b1111000011110000111100001111 (
b1111000011110000111100001111 +
b1111000011110000111100001111 .
b1111000011110000111100001111 1
#25000
b1111000011110000111100001111 )
b1111000011110000111100001111 ,
b1111000011110000111100001111 /
b1111000011110000111100001111 !
b1111000011110000111100001111 %
b1111000011110000111100001111 2
1"
#30000
0"
b11111111111111111111111111111111 #
b11111111111111111111111111111111 &
b11111111111111111111111111111111 (
b11111111111111111111111111111111 +
b11111111111111111111111111111111 .
b11111111111111111111111111111111 1
#35000
b11111111111111111111111111111111 2
b11111111111111111111111111111111 /
b11111111111111111111111111111111 ,
b11111111111111111111111111111111 !
b11111111111111111111111111111111 %
b11111111111111111111111111111111 )
1"
#40000
0"
b1111000011110000111100001111 #
b1111000011110000111100001111 &
b1111000011110000111100001111 (
b1111000011110000111100001111 +
b1111000011110000111100001111 .
b1111000011110000111100001111 1
#45000
b1111000011110000111100001111 )
b1111000011110000111100001111 ,
b1111000011110000111100001111 /
b1111000011110000111100001111 !
b1111000011110000111100001111 %
b1111000011110000111100001111 2
1"
#50000
0"
b0 #
b0 &
b0 (
b0 +
b0 .
b0 1
#55000
b0 2
b0 /
b0 ,
b0 !
b0 %
b0 )
1"
#60000
0"
