$date
	Wed Feb 26 17:34:49 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_tb $end
$var wire 1 ! Zero $end
$var wire 1 " V $end
$var wire 32 # Result [31:0] $end
$var wire 1 $ N $end
$var reg 32 % A [31:0] $end
$var reg 3 & ALUControl [2:0] $end
$var reg 32 ' B [31:0] $end
$scope module uut $end
$var wire 32 ( A [31:0] $end
$var wire 3 ) ALUControl [2:0] $end
$var wire 32 * B [31:0] $end
$var reg 1 $ N $end
$var reg 32 + Result [31:0] $end
$var reg 1 " V $end
$var reg 1 ! Zero $end
$upscope $end
$scope task assert_test $end
$var reg 32 , expected [31:0] $end
$var reg 128 - label [127:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx -
bx ,
b11000101 +
b1001001 *
b0 )
b1111100 (
b1001001 '
b0 &
b1111100 %
0$
b11000101 #
0"
0!
$end
#10
b110011 #
b110011 +
b11111111111111111111111110110111 '
b11111111111111111111111110110111 *
b11000101 ,
b10000010100010001000100001000000010101101000001001000000010101101000010 -
#20
1$
b11111111111111111111111100111011 #
b11111111111111111111111100111011 +
b11111111111111111111111110000100 %
b11111111111111111111111110000100 (
b110011 ,
b10000010100010001000100001000000010101101000001001000000010110101000010 -
#30
0$
b110011 #
b110011 +
b1 &
b1 )
b1001001 '
b1001001 *
b1111100 %
b1111100 (
b11111111111111111111111100111011 ,
b10000010100010001000100001000000010110101000001001000000010110101000010 -
#40
1$
b11111111111111111111111110011100 #
b11111111111111111111111110011100 +
b1111000 '
b1111000 *
b10100 %
b10100 (
b110011 ,
b10100110101010101000010001000000100000100100000001111100010000001000010 -
#50
0$
1!
b0 #
b0 +
b1111100 '
b1111100 *
b1111100 %
b1111100 (
b11111111111111111111111110011100 ,
b10100110101010101000010001000000100000100100000001111000010000001000010 -
#60
0!
b10001100 #
b10001100 +
b11111111111111111111111110001000 '
b11111111111111111111111110001000 *
b10100 %
b10100 (
b0 ,
b1010011010101010100001000100000010000010010000000111101001111010010000001000010 -
#70
b1100100 #
b1100100 +
b11111111111111111111111111101100 %
b11111111111111111111111111101100 (
b10001100 ,
b10100110101010101000010001000000100000100100000001011010010000000101000001011010100001000101001 -
#80
b11111111111111111111111110001000 #
b11111111111111111111111110001000 +
b10 &
b10 )
b1100100 ,
b1010011010101010100001000100000001011010100000100100000001011010010000000101000001011010100001000101001 -
#90
b11111111111111111111111111101100 #
b11111111111111111111111111101100 +
b11 &
b11 )
#100
b1100100 #
b1100100 +
b100 &
b100 )
#110
b11111111111111111111111111011000 #
b11111111111111111111111111011000 +
b101 &
b101 )
#120
b1111111111111111111111111110110 #
b1111111111111111111111111110110 +
b110 &
b110 )
#130
b0 #
b0 +
b111 &
b111 )
#140
